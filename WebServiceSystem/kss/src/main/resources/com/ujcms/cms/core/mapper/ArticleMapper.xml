<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ujcms.cms.core.mapper.ArticleMapper"><resultMap id="BaseResultMap" type="com.ujcms.cms.core.domain.Article">
    <id column="id_" jdbcType="INTEGER" property="id" />
    <result column="site_id_" jdbcType="INTEGER" property="siteId" />
    <result column="org_id_" jdbcType="INTEGER" property="orgId" />
    <result column="channel_id_" jdbcType="INTEGER" property="channelId" />
    <result column="user_id_" jdbcType="INTEGER" property="userId" />
    <result column="modified_user_id_" jdbcType="INTEGER" property="modifiedUserId" />
    <result column="publish_date_" jdbcType="TIMESTAMP" property="publishDate" />
    <result column="with_image_" jdbcType="CHAR" property="withImage" />
    <result column="sticky_" jdbcType="SMALLINT" property="sticky" />
    <result column="status_" jdbcType="SMALLINT" property="status" />
    <result column="src_id_" jdbcType="INTEGER" property="srcId" />
    <result column="type_" jdbcType="SMALLINT" property="type" />
    <result column="input_type_" jdbcType="SMALLINT" property="inputType" />
    <result column="order_" jdbcType="BIGINT" property="order" />
    <result column="created_" jdbcType="TIMESTAMP" property="created" />
    <result column="modified_" jdbcType="TIMESTAMP" property="modified" />
    <result column="offline_date_" jdbcType="TIMESTAMP" property="offlineDate" />
    <result column="sticky_date_" jdbcType="TIMESTAMP" property="stickyDate" />
    <result column="online_date_" jdbcType="TIMESTAMP" property="onlineDate" />
  </resultMap>
    <resultMap extends="BaseResultMap" id="ReferResultMap" type="com.ujcms.cms.core.domain.Article">
        <association column="id_" javaType="com.ujcms.cms.core.domain.ArticleExt" property="ext" select="com.ujcms.cms.core.mapper.ArticleExtMapper.select" />
        <association column="site_id_" javaType="com.ujcms.cms.core.domain.Site" property="site" select="com.ujcms.cms.core.mapper.SiteMapper.selectRefer" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMap" type="com.ujcms.cms.core.domain.Article">
        <association column="id_" javaType="com.ujcms.cms.core.domain.ArticleExt" property="ext" select="com.ujcms.cms.core.mapper.ArticleExtMapper.select" />
        <association column="src_id_" fetchType="lazy" javaType="com.ujcms.cms.core.domain.Article" property="src" select="com.ujcms.cms.core.mapper.ArticleMapper.select" />
        <association column="site_id_" javaType="com.ujcms.cms.core.domain.Site" property="site" select="com.ujcms.cms.core.mapper.SiteMapper.selectRefer" />
        <association column="channel_id_" javaType="com.ujcms.cms.core.domain.Channel" property="channel" select="com.ujcms.cms.core.mapper.ChannelMapper.selectRefer" />
        <association column="org_id_" javaType="com.ujcms.cms.core.domain.Org" property="org" select="com.ujcms.cms.core.mapper.OrgMapper.selectRefer" />
        <association column="user_id_" javaType="com.ujcms.cms.core.domain.User" property="user" select="com.ujcms.cms.core.mapper.UserMapper.selectRefer" />
        <association column="modified_user_id_" javaType="com.ujcms.cms.core.domain.User" property="modifiedUser" select="com.ujcms.cms.core.mapper.UserMapper.selectRefer" />
        <collection column="id_" fetchType="lazy" ofType="com.ujcms.cms.core.domain.ArticleCustom" property="customList" select="com.ujcms.cms.core.mapper.ArticleCustomMapper.listByArticleId" />
        <collection column="id_" fetchType="lazy" ofType="com.ujcms.cms.core.domain.ArticleTag" property="articleTagList" select="com.ujcms.cms.core.mapper.ArticleTagMapper.listByArticleId" />
        <collection column="id_" fetchType="lazy" ofType="com.ujcms.cms.core.domain.BlockItem" property="blockItemList" select="com.ujcms.cms.core.mapper.BlockItemMapper.listByArticleId" />
        <collection column="id_" fetchType="lazy" ofType="com.ujcms.cms.core.domain.Article" property="destList" select="com.ujcms.cms.core.mapper.ArticleMapper.listBySrcId" />
    </resultMap>
    <resultMap id="SitemapResultMap" type="com.ujcms.cms.core.domain.Article">
        <id column="id_" jdbcType="INTEGER" property="id" />
        <result column="channel_id_" jdbcType="INTEGER" property="channelId" />
        <result column="status_" jdbcType="SMALLINT" property="status" />
        <association javaType="com.ujcms.cms.core.domain.ArticleExt" property="ext" resultMap="com.ujcms.cms.core.mapper.ArticleExtMapper.BaseResultMap" />
        <association column="channel_id_" javaType="com.ujcms.cms.core.domain.Channel" property="channel" select="com.ujcms.cms.core.mapper.ChannelMapper.selectForSitemap" />
    </resultMap>
    <select id="listByIds" resultMap="ResultMap">
        select
        <include refid="Column_List" />
        from ujcms_article t
        where t.id_ in
        <foreach close=")" collection="ids" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </select>
    <select id="listBySiteIdForSitemap" resultMap="SitemapResultMap">
        select t.id_, t.channel_id_, t.created_, t.modified_, t.status_, uae.alias_, uae.link_url_
        from ujcms_article t join ujcms_article_ext uae on t.id_ = uae.id_
        where t.site_id_ = #{siteId}
        <if test="minId != null">
            and t.id_ &gt;= #{minId}
        </if>
        order by t.id_
    </select>
    <select id="findNext" resultMap="ResultMap">
        select
        <include refid="Column_List" />
        from ujcms_article t
        where t.channel_id_ = #{channelId}
        and (t.order_ &gt; #{order} or (t.order_ = #{order} and t.id_ &gt; #{id}))
        <if test="status!=null and status.size&gt;0">
            and t.status_ in
            <foreach close=")" collection="status" index="index" item="item" open="(" separator=",">#{item}</foreach>
        </if>
        order by t.order_, t.id_
    </select>
    <select id="findPrev" resultMap="ResultMap">
        select
        <include refid="Column_List" />
        from ujcms_article t
        where t.channel_id_ = #{channelId}
        and (t.order_ &lt; #{order} or (t.order_ = #{order} and t.id_ &lt; #{id}))
        <if test="status!=null and status.size&gt;0">
            and t.status_ in
            <foreach close=")" collection="status" index="index" item="item" open="(" separator=",">#{item}</foreach>
        </if>
        order by t.order_ desc, t.id_ desc
    </select>
    <select id="listByChannelId" resultMap="ResultMap">
        select
        <include refid="Column_List" />
        from ujcms_article t
        where t.channel_id_ = #{channelId,jdbcType=INTEGER} and t.status_ = 0
        order by t.id_ desc
    </select>
    <select id="listBySrcId" resultMap="ResultMap">
        select
        <include refid="Column_List" />
        from ujcms_article t
        where t.src_id_ = #{srcId}
    </select>
    <select id="findFirstByChannelId" resultMap="ReferResultMap">
        select
        <if test="_databaseId == 'sqlserver'">TOP 1</if>
        <if test="_databaseId == 'informix' and _databaseId == 'gbase'">FIRST 1</if>
        <include refid="Column_List" />
        from ujcms_article t
        where t.channel_id_ = #{channelId,jdbcType=INTEGER} and t.status_ = 0
        <if test="_databaseId == 'oracle' and _databaseId == 'dm' and _databaseId == 'oscar'">and ROWNUM &lt;= 1</if>
        order by t.id_ desc
        <if test="_databaseId == 'h2' and _databaseId == 'db2'">FETCH FIRST 1 ROWS ONLY</if>
        <if test="_databaseId != 'oracle' and _databaseId != 'sqlserver' and _databaseId != 'db2' and _databaseId != 'informix' and _databaseId != 'h2' and _databaseId != 'dm' and _databaseId != 'oscar'">
            LIMIT 1
        </if>
    </select>
    <select id="existsByChannelId" resultType="int">
        select case
                   when exists(
                           select *
                           from ujcms_article t
                           where t.channel_id_ = #{channelId}
                       ) then 1
                   else 0
                   end as non_zero_exists
    </select>
    <select id="existsByUserId" resultType="int">
        select case
                   when exists(
                           select *
                           from ujcms_article t
                           where t.user_id_ = #{userId}
                       ) then 1
                   else 0
                   end as non_zero_exists
    </select>
    <select id="countBySiteId" resultType="int">
        select count(*)
        from ujcms_article t
        where t.site_id_ = #{siteId}
        <foreach close=")" collection="status" item="item" nullable="true" open="and t.status_ in (" separator=",">
            #{item}
        </foreach>
    </select>
    <select id="countByPublishDate" resultType="int">
        select count(*)
        from ujcms_article t
        where t.site_id_ = #{siteId}
        <if test="publishDate != null">
            and t.publish_date_ &gt;= #{publishDate}
        </if>
        <if test="status!=null and status.size&gt;0">
            and status_ in
            <foreach close=")" collection="status" index="index" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="statForSitemap" resultType="map">
        select count(*) as count, max(t.id_) as maxId
        from ujcms_article t
        where t.site_id_ = #{siteId}
        <foreach close=")" collection="status" item="item" nullable="true" open="and t.status_ in (" separator=",">
            #{item}
        </foreach>
        order by t.id_
    </select>
    <update id="updateModifiedUser">
        update ujcms_article
        set modified_user_id_ = #{toUserId}
        where modified_user_id_ = ${fromUserId}
    </update>
    <update id="updateStickyDate">
        update ujcms_article
        set sticky_      = 0,
            sticky_date_ = null
        where sticky_date_ &lt;= #{now}
    </update>
    <update id="updateOnlineStatus">
        update ujcms_article
        set status_ = #{published}
        where status_ = #{ready}
          and (online_date_ is null or online_date_ &gt;= #{now})
    </update>
    <update id="updateOfflineStatus">
        update ujcms_article
        set status_ = #{offline}
        where
        <foreach close=")" collection="normals" item="item" open="status_ in (" separator=",">
            #{item}
        </foreach>
        and offline_date_ &gt;= #{now}
    </update>
    <update id="moveUp">
        update ujcms_article
        set order_ = order_ + 1
        where order_ &lt; #{from}
          and order_ &gt;= #{to}
    </update>
    <update id="moveDown">
        update ujcms_article
        set order_ = order_ - 1
        where order_ &gt; #{from}
          and order_ &lt;= #{to}
    </update>
    <update id="updateOrder">
        update ujcms_article
        set order_ = #{order}
        where id_ = #{id}
    </update>
    <delete id="deleteByChannelId" parameterType="int">
        delete
        from ujcms_article
        where channel_id_ = #{channelId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteBySiteId" parameterType="int">
        delete
        from ujcms_article
        where site_id_ = #{siteId,jdbcType=INTEGER}
    </delete>
    <sql id="selectAllSelect" />
    <sql id="selectAllJoin">
        <if test="orgAncestorId != null">
            join ujcms_org_tree orgTree on orgTree.descendant_id_ = t.org_id_
        </if>
        <include refid="com.ujcms.cms.core.mapper.SeqMapper.selectAllCustomsFieldJoin">
            <property name="customsTable" value="ujcms_article_custom" />
            <property name="customsId" value="article_id_" />
        </include>
    </sql>
    <sql id="selectAllWhere">
        <if test="channelAncestorIds != null">
            <choose>
                <when test="channelAncestorIds.size() &gt; 0">
                    and t.channel_id_ in (
                    select channelTree.descendant_id_ from ujcms_channel_tree channelTree
                    where channelTree.ancestor_id_ in
                    <foreach close=")" collection="channelAncestorIds" index="index" item="item" open="(" separator=",">
                        #{item}
                    </foreach>
                    )
                </when>
                <!-- channelAncestorIds.size() = 0 代表没有角色权限，不返回任何数据 -->
                <otherwise>
                    and 1=2
                </otherwise>
            </choose>
        </if>
        <if test="orgAncestorId != null">
            and orgTree.ancestor_id_ = #{orgAncestorId}
        </if>
        <if test="roleIds != null">
            <choose>
                <when test="roleIds.size() &gt; 0">
                    and t.channel_id_ in (
                    select role_article_.channel_id_ from ujcms_role_article role_article_
                    where role_article_.role_id_ in
                    <foreach close=")" collection="roleIds" index="index" item="item" open="(" separator=",">
                        #{item}
                    </foreach>
                    )
                </when>
                <!-- roleIds.size() = 0 代表没有角色权限，不返回任何数据 -->
                <otherwise>
                    and 1=2
                </otherwise>
            </choose>
        </if>
        <include refid="com.ujcms.cms.core.mapper.SeqMapper.selectAllCustomsFieldWhere" />
    </sql>
    <select id="selectAll" resultMap="ResultMap">
        <include refid="com.ujcms.cms.core.mapper.SeqMapper.Select_All">
            <property name="tableName" value="ujcms_article" />
        </include>
    </select>
    <select id="selectRefer" parameterType="int" resultMap="ReferResultMap">
        select
        <include refid="Column_List" />
        from ujcms_article t
        where t.id_ = #{id,jdbcType=INTEGER}
    </select>
    <select id="select" parameterType="int" resultMap="ResultMap">
        select
        <include refid="Column_List" />
        from ujcms_article t
        where t.id_ = #{id,jdbcType=INTEGER}
    </select>
    <delete id="delete" parameterType="int">
        delete
        from ujcms_article
        where id_ = #{id,jdbcType=INTEGER}
    </delete><update id="update" parameterType="com.ujcms.cms.core.domain.Article">
    update ujcms_article
    set site_id_ = #{siteId,jdbcType=INTEGER},
      org_id_ = #{orgId,jdbcType=INTEGER},
      channel_id_ = #{channelId,jdbcType=INTEGER},
      user_id_ = #{userId,jdbcType=INTEGER},
      modified_user_id_ = #{modifiedUserId,jdbcType=INTEGER},
      publish_date_ = #{publishDate,jdbcType=TIMESTAMP},
      with_image_ = #{withImage,jdbcType=CHAR},
      sticky_ = #{sticky,jdbcType=SMALLINT},
      status_ = #{status,jdbcType=SMALLINT},
      src_id_ = #{srcId,jdbcType=INTEGER},
      type_ = #{type,jdbcType=SMALLINT},
      input_type_ = #{inputType,jdbcType=SMALLINT},
      created_ = #{created,jdbcType=TIMESTAMP},
      modified_ = #{modified,jdbcType=TIMESTAMP},
      offline_date_ = #{offlineDate,jdbcType=TIMESTAMP},
      sticky_date_ = #{stickyDate,jdbcType=TIMESTAMP},
      online_date_ = #{onlineDate,jdbcType=TIMESTAMP}
    where id_ = #{id,jdbcType=INTEGER}
  </update><insert id="insert" parameterType="com.ujcms.cms.core.domain.Article">
    insert into ujcms_article (id_, site_id_, org_id_, channel_id_, user_id_, modified_user_id_, publish_date_, with_image_, sticky_, status_, src_id_, type_, input_type_, order_, created_, modified_, offline_date_, sticky_date_, online_date_)
    values (#{id,jdbcType=INTEGER}, #{siteId,jdbcType=INTEGER}, #{orgId,jdbcType=INTEGER}, #{channelId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{modifiedUserId,jdbcType=INTEGER}, #{publishDate,jdbcType=TIMESTAMP}, #{withImage,jdbcType=CHAR}, #{sticky,jdbcType=SMALLINT}, #{status,jdbcType=SMALLINT}, #{srcId,jdbcType=INTEGER}, #{type,jdbcType=SMALLINT}, #{inputType,jdbcType=SMALLINT}, #{order,jdbcType=BIGINT}, #{created,jdbcType=TIMESTAMP}, #{modified,jdbcType=TIMESTAMP}, #{offlineDate,jdbcType=TIMESTAMP}, #{stickyDate,jdbcType=TIMESTAMP}, #{onlineDate,jdbcType=TIMESTAMP})
  </insert><sql id="Column_List">
    t.id_, t.site_id_, t.org_id_, t.channel_id_, t.user_id_, t.modified_user_id_, t.publish_date_, t.with_image_, t.sticky_, t.status_, t.src_id_, t.type_, t.input_type_, t.order_, t.created_, t.modified_, t.offline_date_, t.sticky_date_, t.online_date_
  </sql></mapper>